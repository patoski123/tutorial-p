name: Test Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
        test-type: [api, ui, smoke]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Install Playwright browsers
        if: matrix.test-type == 'ui' || matrix.test-type == 'smoke'
        run: |
          playwright install chromium
          playwright install-deps

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run API tests
        if: matrix.test-type == 'api'
        run: |
          pytest tests/api/ -v --cov=api --cov-report=xml
        env:
          TEST_ENV: github
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}

      - name: Run UI tests
        if: matrix.test-type == 'ui'
        run: |
          pytest tests/ui/ -v --cov=ui --cov-report=xml
        env:
          TEST_ENV: github
          UI_HEADLESS: true
          API_BASE_URL: ${{ secrets.API_BASE_URL }}

      - name: Run smoke tests
        if: matrix.test-type == 'smoke'
        run: |
          pytest -m smoke -v --cov=. --cov-report=xml
        env:
          TEST_ENV: github
          UI_HEADLESS: true
          API_BASE_URL: ${{ secrets.API_BASE_URL }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.test-type }}-${{ matrix.python-version }}
          path: |
            reports/
            screenshots/
            logs/

  performance:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[perf]')

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run performance tests
        run: |
          pytest tests/performance/ -v
          cd performance/load_tests
          locust -f api_load_test.py --headless -u 10 -r 2 -t 300s --host=${{ secrets.API_BASE_URL }}
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}